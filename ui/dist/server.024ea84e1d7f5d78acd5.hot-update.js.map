{"version":3,"sources":["webpack:///./src/IssueList.jsx"],"names":["IssueList","React","Component","constructor","issues","store","initialData","issueList","selectedIssue","issue","state","toastVisible","toastMessage","toastType","closeIssue","bind","deleteIssue","showSuccess","showError","dismissToast","componentDidMount","loadData","componentDidUpdate","prevProps","location","search","prevSearch","match","params","id","prevId","props","console","log","fetchData","URLSearchParams","vars","hasSelection","selectedId","get","status","effortMin","parseInt","Number","isNaN","effortMax","idInt","treu","query","data","graphQLFetch","index","setState","prevState","newList","issueUpdate","pathname","history","issueDelete","push","splice","message","render"],"mappings":"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","file":"server.024ea84e1d7f5d78acd5.hot-update.js","sourcesContent":["import React from 'react';\n\nimport IssueFilter from './IssueFilter.jsx';\nimport IssueTable from './IssueTable.jsx';\nimport IssueDetail from './IssueDetail.jsx';\n\nimport graphQLFetch from './graphQLFetch.js';\nimport Toast from './Toast.jsx';\nimport URLSearchParams from 'url-search-params';\nimport { Route } from 'react-router-dom';\nimport { Panel } from 'react-bootstrap';\nimport store from './store.js';\n\n\n{/**parent */}\n{/**you should be able to use double quotes in the title of a newly added issue without causing any errors. */}\nexport default class IssueList extends React.Component { \n    constructor() {\n        super();\n        const issues = store.initialData ? store.initialData.issueList : null;\n        const selectedIssue = store.initialData ? store.initialData.issue : null;\n        delete store.initialData;\n        this.state = { issues,\n                       selectedIssue,\n                       toastVisible: false,\n                       toastMessage: '',\n                       toastType: 'info' };\n        {/**to make this always refer to IssueList, otherwise, this.state would be undefined */}\n        this.closeIssue = this.closeIssue.bind(this);\n        this.deleteIssue = this.deleteIssue.bind(this);\n        this.showSuccess = this.showSuccess.bind(this);\n        this.showError = this.showError.bind(this);\n        this.dismissToast = this.dismissToast.bind(this);\n    }\n\n    componentDidMount() {\n        const { issues } = this.state;\n        if (issues == null) this.loadData();\n    }\n\n    componentDidUpdate(prevProps) {\n        const { location: { search: prevSearch }, match: { params: {id: prevId }} } = prevProps;\n        const { location: { search }, match: {params:{id}} } = this.props;\n        console.log(search);\n        if (prevSearch !== search || prevId !== id) {\n            this.loadData();\n        }\n    }\n\n    static async fetchData(match, search, showError) {\n        const params = new URLSearchParams(search);\n        const vars = { hasSelection: false, selectedId: 0 };\n        if (params.get('status')) vars.status = params.get('status');\n\n        const effortMin = parseInt(params.get('effortMin'), 10);\n        if (!Number.isNaN(effortMin)) vars.effortMin = effortMin;\n        const effortMax = parseInt(params.get('effortMax'), 10);\n        if (!Number.isNaN(effortMax)) vars.effortMax = effortMax;\n\n        const { params: {id} } = match;\n        const idInt = parseInt(id, 10);\n        if (!Number.isNaN(idInt)) {\n            vars.hasSelection= treu;\n            vars.selectedId = idInt;\n        }\n\n        const query = `query issueList(\n            $status: StatusType\n            $effortMin: Int\n            $effortMax: Int\n            $hasSelection: Boolean!\n            $selectedId: Int!\n        ) {\n          issueList (\n              status: $status\n              effortMin: $effortMin\n              effortMax: $effortMax\n          ) {\n            id title status owner\n            created effort due\n          }\n          issue(id: $selectedId) @include (if : $hasSelection) {\n              id description\n          }\n        }`;\n    \n        const data = await graphQLFetch(query,vars,showError);\n        return data;\n      }\n\n    async closeIssue(index) {\n        const query = `mutation issueClose($id: Int!) {\n            issueUpdate(id:$id, changes: { status: Closed }) {\n                id title status owner effort\n                created due description\n            }\n        }`;\n        const { issues } = this.state;\n        const data = await graphQLFetch(query, { id: issues[index].id }, this.showError);\n        if (data) {\n            this.setState((prevState) => {\n                const newList = [...prevState.issues];\n                newList[index] = data.issueUpdate;\n                return { issues: newList };\n            });\n        } else {\n            this.loadData();\n        }\n    }\n\n    async deleteIssue(index) {\n        const query = `mutation issueDelete($id: Int!) {\n            issueDelete(id: $id)\n        }`;\n        const { issues } = this.state;\n        const { location: { pathname,search }, history } = this.props;\n        const { id } = issues[index];\n        const data = await graphQLFetch(query, {id}, this.showError);\n        if (data && data.issueDelete) {\n            this.setState((prevState) => {\n                const newList = [...prevState.issues];\n                if (pathname === `/issues/${id}`) {\n                    history.push({ pathname: '/issues', search });\n                }\n                newList.splice(index, 1);\n                return { issues: newList };\n            });\n            this.showSuccess(`Deleted issue ${id} successfully.`);\n        } else {\n            this.loadData();\n        }\n    }\n\n    showSuccess(message) {\n        this.setState({\n            toastVisible: true, toastMessage:message, toastType: 'success'\n        });\n    }\n\n    showError(message) {\n        this.setState({\n            toastVisible: true, toastMessage: message, toastType:'danger'\n        })\n    }\n\n    dismissToast() {\n        this.setState({ toastVisible: false });\n    }\n\n    async loadData() {\n        const { location: {search}, match } = this.props;\n        const data = await IssueList.fetchData(match, search, this.showError);\n        if (data) {\n            this.setState({ issues: data.issueList, selectedIssue: data.issue });\n        }\n    }\n\n    render() {\n        const { issues } = this.state;\n        if (issues == null) return null;\n        const { toastVisible, toastType, toastMessage } = this.state;\n        const { selectedIssue } = this.state;\n\n        return (\n            <React.Fragment>\n                <Panel>\n                    <Panel.Heading>\n                        <Panel.Title toggle>Filter</Panel.Title>\n                    </Panel.Heading>\n                    <Panel.Body collapsible>\n                        <IssueFilter />\n                    </Panel.Body>\n                </Panel>\n                <hr />\n                <IssueTable issues={issues} closeIssue={this.closeIssue} deleteIssue={this.deleteIssue} />\n                {/** let’s use the path as matched in the parent component, using this.props.match.path. This is so that even if the parent path changes for any reason, the change is isolated to one place. */}\n                <IssueDetail issue={selectedIssue} />\n                <Toast showing={toastVisible} onDismiss={this.dismissToast} bsStyle={toastType} >\n                    {toastMessage}\n                </Toast>  \n            </React.Fragment>\n        );\n    }\n}"],"sourceRoot":""}