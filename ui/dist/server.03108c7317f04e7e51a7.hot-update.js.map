{"version":3,"sources":["webpack:///./src/Search.jsx"],"names":["Search","React","Component","constructor","props","onChangeSelection","bind","loadOptions","value","history","push","term","length","query","showError","data","graphQLFetch","search","issueList","issues","map","issue","label","id","title","render","DropdownIndicator","withRouter","withToast"],"mappings":";;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;CACkD;;AAClD;AAEA;AACA;;AAEA,MAAMA,MAAN,SAAqBC,4CAAK,CAACC,SAA3B,CAAqC;AACjCC,aAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAAnB;AACH;;AAEDD,mBAAiB,CAAC;AAAEG;AAAF,GAAD,EAAY;AACzB,UAAM;AAAEC;AAAF,QAAc,KAAKL,KAAzB;AACAK,WAAO,CAACC,IAAR,CAAc,SAAQF,KAAM,EAA5B;AACH;;AAED,QAAMD,WAAN,CAAkBI,IAAlB,EAAwB;AACpB,QAAIA,IAAI,CAACC,MAAL,GAAc,CAAlB,EAAqB,OAAO,EAAP;AACrB,UAAMC,KAAK,GAAI;;;;UAAf;AAMA,UAAM;AAAEC;AAAF,QAAgB,KAAKV,KAA3B;AACA,UAAMW,IAAI,GAAG,MAAMC,gEAAY,CAACH,KAAD,EAAQ;AAAEI,YAAM,EAACN;AAAT,KAAR,EAAyBG,SAAzB,CAA/B;AACA,WAAOC,IAAI,CAACG,SAAL,CAAeC,MAAf,CAAsBC,GAAtB,CAA0BC,KAAK,KAAK;AACvCC,WAAK,EAAG,IAAGD,KAAK,CAACE,EAAG,KAAIF,KAAK,CAACG,KAAM,EADG;AACAhB,WAAK,EAAEa,KAAK,CAACE;AADb,KAAL,CAA/B,CAAP;AAGH;;AAEDE,QAAM,GAAG;AACL,wBACI,2DAAC,6DAAD;AACI,gBAAU,EAAC,eADf;AAEI,WAAK,EAAC,EAFV;AAGI,iBAAW,EAAE,KAAKlB,WAHtB;AAII,kBAAY,EAAE,MAAI,IAJtB;AAKI,cAAQ,EAAE,KAAKF,iBALnB;AAMI,gBAAU,EAAE;AAAEqB,yBAAiB,EAAE;AAArB;AANhB,MADJ;AAUH;;AAtCgC;;AAyCtBC,kIAAU,CAACC,8DAAS,CAAC5B,MAAD,CAAV,CAAzB,E","file":"server.03108c7317f04e7e51a7.hot-update.js","sourcesContent":["import React from 'react';\nimport SelectAsync from 'react-select/lib/Async'; // eslint-disable-line\nimport { withRouter } from 'react-router-dom';\n\nimport graphQLFetch from './graphQLFetch.js';\nimport withToast from './withToast.jsx';\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n        this.onChangeSelection = this.onChangeSelection.bind(this);\n        this.loadOptions = this.loadOptions.bind(this);\n    }\n\n    onChangeSelection({ value }) {\n        const { history } = this.props;\n        history.push(`/edit/${value}`);\n    }\n\n    async loadOptions(term) {\n        if (term.length < 3) return [];\n        const query = `query issueList($search: String) {\n            issueList(search: $search) {\n                issues { id title }\n            }\n        }`;\n\n        const { showError } = this.props;\n        const data = await graphQLFetch(query, { search:term }, showError);\n        return data.issueList.issues.map(issue => ({\n            label: `#${issue.id}: ${issue.title}`, value: issue.id,\n        }));\n    }\n\n    render() {\n        return (\n            <SelectAsync\n                instanceId=\"search-select\"\n                value=\"\"\n                loadOptions={this.loadOptions}\n                filterOption={()=>true}\n                onChange={this.onChangeSelection}\n                components={{ DropdownIndicator: null }}\n            />\n        );\n    }\n}\n\nexport default withRouter(withToast(Search));"],"sourceRoot":""}