{"version":3,"sources":["webpack:///./server/render.jsx"],"names":["render","req","res","activeRoute","routes","find","route","matchPath","path","initialData","component","fetchData","match","index","url","indexOf","search","substr","store","context","element","body","ReactDOMServer","renderToString","send","template"],"mappings":";;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA,eAAeA,MAAf,CAAsBC,GAAtB,EAA2BC,GAA3B,EAAgC;AAC5B,QAAMC,WAAW,GAAGC,sDAAM,CAACC,IAAP,CAChBC,KAAK,IAAIC,kEAAS,CAACN,GAAG,CAACO,IAAL,EAAWF,KAAX,CADF,CAApB;AAIA,MAAIG,WAAJ;;AACA,MAAIN,WAAW,IAAIA,WAAW,CAACO,SAAZ,CAAsBC,SAAzC,EAAoD;AAChD,UAAMC,KAAK,GAAGL,kEAAS,CAACN,GAAG,CAACO,IAAL,EAAWL,WAAX,CAAvB;AACA,UAAMU,KAAK,GAAGZ,GAAG,CAACa,GAAJ,CAAQC,OAAR,CAAgB,GAAhB,CAAd;AACA,UAAMC,MAAM,GAAGH,KAAK,KAAK,CAAC,CAAX,GAAeZ,GAAG,CAACa,GAAJ,CAAQG,MAAR,CAAeJ,KAAf,CAAf,GAAuC,IAAtD;AACAJ,eAAW,GAAG,MAAMN,WAAW,CAACO,SAAZ,CAAsBC,SAAtB,CAAgCC,KAAhC,EAAsCI,MAAtC,CAApB;AACH;;AAEDE,uDAAK,CAACT,WAAN,GAAoBA,WAApB;AACA,QAAMU,OAAO,GAAG,EAAhB;AACA,QAAMC,OAAO,gBACT,2DAAC,6DAAD;AAAc,YAAQ,EAAEnB,GAAG,CAACa,GAA5B;AAAiC,WAAO,EAAE;AAA1C,kBACI,2DAAC,qDAAD,OADJ,CADJ;AAKA,QAAMO,IAAI,GAAGC,uDAAc,CAACC,cAAf,CAA8BH,OAA9B,CAAb;AACAlB,KAAG,CAACsB,IAAJ,CAASC,4DAAQ,CAACJ,IAAD,EAAOZ,WAAP,CAAjB;AACH;;AAEcT,qEAAf,E","file":"server.276d897b279060feeb42.hot-update.js","sourcesContent":["import React from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport { StaticRouter, matchPath } from 'react-router-dom';\n\nimport Page from '../src/Page.jsx';\nimport template from './template.js';\nimport store from '../src/store.js';\nimport routes from '../src/routes.js';\n\nasync function render(req, res) {\n    const activeRoute = routes.find(\n        route => matchPath(req.path, route),\n    );\n\n    let initialData;\n    if (activeRoute && activeRoute.component.fetchData) {\n        const match = matchPath(req.path, activeRoute);\n        const index = req.url.indexOf('?');\n        const search = index !== -1 ? req.url.substr(index) : null;\n        initialData = await activeRoute.component.fetchData(match,search);\n    }\n\n    store.initialData = initialData;\n    const context = {};\n    const element = (\n        <StaticRouter location={req.url} context={{}}>\n            <Page />\n        </StaticRouter>\n    );\n    const body = ReactDOMServer.renderToString(element);\n    res.send(template(body, initialData));\n}\n\nexport default render;"],"sourceRoot":""}